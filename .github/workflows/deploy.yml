name: Build Docker and Deploy

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
    workflow_dispatch:

env:
    ECR_BASE_PATH: 707542627134.dkr.ecr.eu-west-3.amazonaws.com
    APP_NAME: dashboard

jobs:
    tests:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  registry-url: 'https://npm.pkg.github.com'
            - name: dependencies
              run: yarn install --frozen-lockfile
              env:
                  NODE_AUTH_TOKEN: ${{secrets.GH_PAT}}
            - name: build
              run: yarn build
            - name: test
              run: yarn test

    tag-version:
        # Only triggered when running on main
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.create-tag.outputs.version }}
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        steps:
            - id: checkout
              name: Checkout main branch
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - id: create-tag
              name: Tag a new version
              run: |
                  git config user.name "GitHub Actions Bot"
                  git config user.email "<>"
                  VERSION_TAG=`git describe --tags --abbrev=0 | awk -F. '{OFS="."; $NF+=1; print $0}'`
                  git tag $VERSION_TAG -a -m "Automatic version increment on push"
                  git push origin $VERSION_TAG
                  echo "::set-output name=version::$VERSION_TAG"

    docker-build:
        runs-on: ubuntu-latest
        needs: tag-version
        steps:
            - name: Checkout main branch
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: eu-west-3
            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1
            - name: Build Docker image
              run: docker build --platform=linux/amd64 -t ${{ env.APP_NAME }} --build-arg NPM_TOKEN=${{ secrets.GH_PAT }} .
            - name: Tag Docker image
              run: |
                  docker tag ${{ env.APP_NAME }} ${{ env.ECR_BASE_PATH }}/${{ env.APP_NAME }}:latest
                  docker tag ${{ env.APP_NAME }} ${{ env.ECR_BASE_PATH }}/${{ env.APP_NAME }}:${{ needs.tag-version.outputs.version }}
            - name: Push Docker image
              run: |
                  aws ecr get-login-password --region eu-west-3 | docker login --username AWS --password-stdin ${{ env.ECR_BASE_PATH }}
                  docker push --all-tags ${{ env.ECR_BASE_PATH }}/${{ env.APP_NAME }}

    deploy-prd:
        # Only triggered when successful version tagging
        runs-on: ubuntu-latest
        needs: [tests, tag-version, docker-build]
        steps:
            - name: Trigger deploy workflow
              uses: convictional/trigger-workflow-and-wait@v1.6.0
              with:
                  owner: itsrever
                  repo: resource-infra
                  github_token: ${{ secrets.GH_PAT }}
                  workflow_file_name: service-deploy.yml
                  ref: main
                  wait_interval: 10
                  propagate_failure: true
                  trigger_workflow: true
                  wait_workflow: true
                  last_workflow_interval: 5
                  client_payload: >
                      { 
                        "servicename":"${{ env.APP_NAME }}",
                        "image":"${{ env.ECR_BASE_PATH }}/${{ env.APP_NAME }}:${{ needs.tag-version.outputs.version }}",
                        "environment":"prd",
                        "username":"${{ github.actor }}",
                        "codelink":"${{ github.event.head_commit.url }}"
                      }
